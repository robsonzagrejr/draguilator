
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BREAK COMMA COMMENT DEFINE DIVIDE ELSE EQUAL_TO FLOAT FLOAT_CONSTANT FOR GREATER_EQUAL_THAN GREATER_THAN IDENT IF INT INT_CONSTANT LBRACES LBRACKET LESS_EQUAL_THAN LESS_THAN LPAREN MINUS MODULO NEW NOT_EQUAL_TO NULL PLUS PRINT RBRACES RBRACKET READ RETURN RPAREN SEMICOLON STRING STRING_CONSTANT TIMESprogram : statement\n              | funclist\n              | empty\n    funclist : funcdef _funclist\n    _funclist : funclist\n                | empty\n    funcdef : DEFINE IDENT LPAREN paramlist RPAREN LBRACES statelist RBRACES\n    paramlist : INT IDENT _paramlist\n                | FLOAT IDENT _paramlist\n                | STRING IDENT _paramlist\n                | empty\n    _paramlist : COMMA paramlist\n                 | empty\n    statement : vardecl SEMICOLON\n                | atribstat SEMICOLON\n                | printstat SEMICOLON\n                | readstat SEMICOLON\n                | returnstat SEMICOLON\n                | ifstat\n                | forstat\n                | LBRACES statelist RBRACES\n                | BREAK SEMICOLON\n                | SEMICOLON\n    vardecl : INT IDENT vardecl_line\n              | FLOAT IDENT vardecl_line\n              | STRING IDENT vardecl_line\n    vardecl_line : LBRACKET INT_CONSTANT RBRACKET vardecl_line\n                   | empty\n    atribstat : lvalue ASSIGN _atribstat\n    _atribstat : PLUS _atribstat_help\n                 | MINUS _atribstat_help\n                 | __atribstat\n                 | IDENT ___atribstat\n                 | allocexpression\n    _atribstat_help : IDENT lvalue_line term_line numexpression_line _expression\n                      | __atribstat\n    __atribstat : INT_CONSTANT term_line numexpression_line _expression\n                 | FLOAT_CONSTANT term_line numexpression_line _expression\n                 | STRING_CONSTANT term_line numexpression_line _expression\n                 | NULL term_line numexpression_line _expression\n                 | LPAREN numexpression RPAREN term_line numexpression_line _expression\n    ___atribstat : lvalue_line term_line numexpression_line _expression\n                  | LPAREN paramlistcall RPAREN\n    funccall : IDENT LPAREN paramlistcall RPAREN\n    paramlistcall : IDENT _paramlistcall\n\t\t\t         | empty\n    _paramlistcall : COMMA paramlistcall\n\t\t\t          | empty\n    printstat : PRINT expression\n    readstat : READ lvalue\n    returnstat : RETURN\n    ifstat : IF LPAREN expression RPAREN LBRACES statelist RBRACES _ifstat\n    _ifstat : ELSE statement\n              | empty\n    forstat : FOR LPAREN atribstat SEMICOLON expression SEMICOLON atribstat RPAREN  statement\n    statelist : statement _statelist\n    _statelist : statelist\n                 | empty\n    allocexpression : NEW _allocexpression\n    _allocexpression : INT allocexpression_line\n                       | FLOAT allocexpression_line\n                       | STRING allocexpression_line\n    allocexpression_line : LBRACKET numexpression RBRACKET _allocexpression_line\n    _allocexpression_line : allocexpression_line\n                            | empty\n    expression : numexpression _expression\n    _expression : LESS_THAN numexpression\n                  | GREATER_THAN numexpression\n                  | LESS_EQUAL_THAN numexpression\n                  | GREATER_EQUAL_THAN numexpression\n                  | EQUAL_TO numexpression\n                  | NOT_EQUAL_TO numexpression\n                  | empty\n    numexpression : term numexpression_line\n    numexpression_line : PLUS term numexpression_line\n                         | MINUS term numexpression_line\n                         | empty\n    term : unaryexpr term_line\n    term_line : TIMES unaryexpr term_line\n                | DIVIDE unaryexpr term_line\n                | MODULO unaryexpr term_line\n                | empty\n    unaryexpr : factor\n                 | PLUS factor\n                 | MINUS factor\n    factor : INT_CONSTANT\n             | FLOAT_CONSTANT\n             | STRING_CONSTANT\n             | NULL\n             | lvalue\n             | LPAREN numexpression RPAREN\n    lvalue : IDENT lvalue_line\n    lvalue_line : LBRACKET numexpression RBRACKET lvalue_line\n                  | empty\n    empty :'
    
_lr_action_items = {'LBRACES':([0,6,11,12,13,27,28,29,30,31,33,34,62,137,165,167,186,197,206,207,208,209,211,212,],[13,-23,-19,-20,13,-14,-15,-16,-17,-18,13,-22,-21,165,13,186,13,-95,-52,13,-54,13,-53,-55,]),'BREAK':([0,6,11,12,13,27,28,29,30,31,33,34,62,165,186,197,206,207,208,209,211,212,],[14,-23,-19,-20,14,-14,-15,-16,-17,-18,14,-22,-21,14,14,-95,-52,14,-54,14,-53,-55,]),'SEMICOLON':([0,5,6,7,8,9,10,11,12,13,14,17,23,27,28,29,30,31,33,34,38,39,41,42,43,45,46,47,48,49,52,53,54,55,56,58,62,66,68,70,71,72,75,76,77,78,79,80,81,84,91,92,95,96,100,101,102,105,108,109,110,111,112,113,114,116,117,118,119,121,125,126,127,128,129,130,131,132,133,134,135,136,144,145,146,147,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,171,172,173,174,178,179,180,181,182,186,192,193,195,196,197,201,202,203,204,205,206,207,208,209,211,212,],[6,27,-23,28,29,30,31,-19,-20,6,34,-95,-51,-14,-15,-16,-17,-18,6,-22,-95,-92,-94,-95,-95,-49,-95,-95,-95,-83,-86,-87,-88,-89,-90,-50,-21,-24,-28,-25,-26,-29,-32,-95,-34,-95,-95,-95,-95,-66,-73,-74,-77,-78,-82,-84,-85,138,-95,-30,-95,-36,-31,-33,-95,-95,-95,-95,-95,-59,-67,-68,-69,-70,-71,-72,-95,-95,-95,-95,-95,-91,-95,-93,-95,-95,-95,-95,-95,-95,-95,-60,-61,-62,-75,-76,-79,-80,-81,6,185,-27,-95,-95,-43,-37,-38,-39,-40,-95,6,-95,-42,-95,-95,-95,-35,-41,-63,-64,-65,-52,6,-54,6,-53,-55,]),'$end':([0,1,2,3,4,6,11,12,15,27,28,29,30,31,34,35,36,37,62,197,206,208,210,211,212,],[-95,0,-1,-2,-3,-23,-19,-20,-95,-14,-15,-16,-17,-18,-22,-4,-5,-6,-21,-95,-52,-54,-7,-53,-55,]),'INT':([0,6,11,12,13,27,28,29,30,31,33,34,62,83,106,165,186,188,197,206,207,208,209,211,212,],[16,-23,-19,-20,16,-14,-15,-16,-17,-18,16,-22,-21,122,140,16,16,140,-95,-52,16,-54,16,-53,-55,]),'FLOAT':([0,6,11,12,13,27,28,29,30,31,33,34,62,83,106,165,186,188,197,206,207,208,209,211,212,],[18,-23,-19,-20,18,-14,-15,-16,-17,-18,18,-22,-21,123,141,18,18,141,-95,-52,18,-54,18,-53,-55,]),'STRING':([0,6,11,12,13,27,28,29,30,31,33,34,62,83,106,165,186,188,197,206,207,208,209,211,212,],[19,-23,-19,-20,19,-14,-15,-16,-17,-18,19,-22,-21,124,142,19,19,142,-95,-52,19,-54,19,-53,-55,]),'PRINT':([0,6,11,12,13,27,28,29,30,31,33,34,62,165,186,197,206,207,208,209,211,212,],[21,-23,-19,-20,21,-14,-15,-16,-17,-18,21,-22,-21,21,21,-95,-52,21,-54,21,-53,-55,]),'READ':([0,6,11,12,13,27,28,29,30,31,33,34,62,165,186,197,206,207,208,209,211,212,],[22,-23,-19,-20,22,-14,-15,-16,-17,-18,22,-22,-21,22,22,-95,-52,22,-54,22,-53,-55,]),'RETURN':([0,6,11,12,13,27,28,29,30,31,33,34,62,165,186,197,206,207,208,209,211,212,],[23,-23,-19,-20,23,-14,-15,-16,-17,-18,23,-22,-21,23,23,-95,-52,23,-54,23,-53,-55,]),'IF':([0,6,11,12,13,27,28,29,30,31,33,34,62,165,186,197,206,207,208,209,211,212,],[24,-23,-19,-20,24,-14,-15,-16,-17,-18,24,-22,-21,24,24,-95,-52,24,-54,24,-53,-55,]),'FOR':([0,6,11,12,13,27,28,29,30,31,33,34,62,165,186,197,206,207,208,209,211,212,],[25,-23,-19,-20,25,-14,-15,-16,-17,-18,25,-22,-21,25,25,-95,-52,25,-54,25,-53,-55,]),'DEFINE':([0,15,210,],[26,26,-7,]),'IDENT':([0,6,11,12,13,16,18,19,21,22,26,27,28,29,30,31,33,34,40,44,50,51,57,59,60,62,73,74,82,85,86,87,88,89,90,93,94,97,98,99,115,138,140,141,142,157,165,176,185,186,197,206,207,208,209,211,212,],[17,-23,-19,-20,17,38,42,43,17,17,61,-14,-15,-16,-17,-18,17,-22,17,76,17,17,17,17,17,-21,110,110,17,17,17,17,17,17,17,17,17,17,17,17,149,17,168,169,170,17,17,149,17,17,-95,-52,17,-54,17,-53,-55,]),'RBRACES':([6,11,12,27,28,29,30,31,32,33,34,62,63,64,65,184,197,199,206,208,211,212,],[-23,-19,-20,-14,-15,-16,-17,-18,62,-95,-22,-21,-56,-57,-58,197,-95,210,-52,-54,-53,-55,]),'LBRACKET':([17,38,42,43,76,108,110,122,123,124,144,196,],[40,67,67,67,40,40,40,157,157,157,67,157,]),'ASSIGN':([17,20,39,41,108,145,],[-95,44,-92,-94,-95,-93,]),'TIMES':([17,39,41,48,49,52,53,54,55,56,76,78,79,80,81,101,102,108,110,114,133,134,135,136,145,146,155,],[-95,-92,-94,97,-83,-86,-87,-88,-89,-90,-95,97,97,97,97,-84,-85,-95,-95,97,97,97,97,-91,-93,97,97,]),'DIVIDE':([17,39,41,48,49,52,53,54,55,56,76,78,79,80,81,101,102,108,110,114,133,134,135,136,145,146,155,],[-95,-92,-94,98,-83,-86,-87,-88,-89,-90,-95,98,98,98,98,-84,-85,-95,-95,98,98,98,98,-91,-93,98,98,]),'MODULO':([17,39,41,48,49,52,53,54,55,56,76,78,79,80,81,101,102,108,110,114,133,134,135,136,145,146,155,],[-95,-92,-94,99,-83,-86,-87,-88,-89,-90,-95,99,99,99,99,-84,-85,-95,-95,99,99,99,99,-91,-93,99,99,]),'PLUS':([17,21,39,40,41,44,47,48,49,52,53,54,55,56,57,59,76,78,79,80,81,82,85,86,87,88,89,90,93,94,96,97,98,99,100,101,102,108,110,114,116,117,118,119,131,132,133,134,135,136,138,145,146,147,155,157,162,163,164,172,182,],[-95,50,-92,50,-94,73,93,-95,-83,-86,-87,-88,-89,-90,50,50,-95,-95,-95,-95,-95,50,50,50,50,50,50,50,50,50,-78,50,50,50,-82,-84,-85,-95,-95,-95,93,93,93,93,93,93,-95,-95,-95,-91,50,-93,-95,93,-95,50,-79,-80,-81,93,93,]),'MINUS':([17,21,39,40,41,44,47,48,49,52,53,54,55,56,57,59,76,78,79,80,81,82,85,86,87,88,89,90,93,94,96,97,98,99,100,101,102,108,110,114,116,117,118,119,131,132,133,134,135,136,138,145,146,147,155,157,162,163,164,172,182,],[-95,51,-92,51,-94,74,94,-95,-83,-86,-87,-88,-89,-90,51,51,-95,-95,-95,-95,-95,51,51,51,51,51,51,51,51,51,-78,51,51,51,-82,-84,-85,-95,-95,-95,94,94,94,94,94,94,-95,-95,-95,-91,51,-93,-95,94,-95,51,-79,-80,-81,94,94,]),'LESS_THAN':([17,39,41,46,47,48,49,52,53,54,55,56,76,78,79,80,81,92,95,96,100,101,102,108,110,114,116,117,118,119,131,132,133,134,135,136,145,146,147,151,152,153,154,155,160,161,162,163,164,172,173,182,192,195,],[-95,-92,-94,85,-95,-95,-83,-86,-87,-88,-89,-90,-95,-95,-95,-95,-95,-74,-77,-78,-82,-84,-85,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-91,-93,-95,-95,85,85,85,85,-95,-75,-76,-79,-80,-81,-95,85,-95,85,85,]),'GREATER_THAN':([17,39,41,46,47,48,49,52,53,54,55,56,76,78,79,80,81,92,95,96,100,101,102,108,110,114,116,117,118,119,131,132,133,134,135,136,145,146,147,151,152,153,154,155,160,161,162,163,164,172,173,182,192,195,],[-95,-92,-94,86,-95,-95,-83,-86,-87,-88,-89,-90,-95,-95,-95,-95,-95,-74,-77,-78,-82,-84,-85,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-91,-93,-95,-95,86,86,86,86,-95,-75,-76,-79,-80,-81,-95,86,-95,86,86,]),'LESS_EQUAL_THAN':([17,39,41,46,47,48,49,52,53,54,55,56,76,78,79,80,81,92,95,96,100,101,102,108,110,114,116,117,118,119,131,132,133,134,135,136,145,146,147,151,152,153,154,155,160,161,162,163,164,172,173,182,192,195,],[-95,-92,-94,87,-95,-95,-83,-86,-87,-88,-89,-90,-95,-95,-95,-95,-95,-74,-77,-78,-82,-84,-85,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-91,-93,-95,-95,87,87,87,87,-95,-75,-76,-79,-80,-81,-95,87,-95,87,87,]),'GREATER_EQUAL_THAN':([17,39,41,46,47,48,49,52,53,54,55,56,76,78,79,80,81,92,95,96,100,101,102,108,110,114,116,117,118,119,131,132,133,134,135,136,145,146,147,151,152,153,154,155,160,161,162,163,164,172,173,182,192,195,],[-95,-92,-94,88,-95,-95,-83,-86,-87,-88,-89,-90,-95,-95,-95,-95,-95,-74,-77,-78,-82,-84,-85,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-91,-93,-95,-95,88,88,88,88,-95,-75,-76,-79,-80,-81,-95,88,-95,88,88,]),'EQUAL_TO':([17,39,41,46,47,48,49,52,53,54,55,56,76,78,79,80,81,92,95,96,100,101,102,108,110,114,116,117,118,119,131,132,133,134,135,136,145,146,147,151,152,153,154,155,160,161,162,163,164,172,173,182,192,195,],[-95,-92,-94,89,-95,-95,-83,-86,-87,-88,-89,-90,-95,-95,-95,-95,-95,-74,-77,-78,-82,-84,-85,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-91,-93,-95,-95,89,89,89,89,-95,-75,-76,-79,-80,-81,-95,89,-95,89,89,]),'NOT_EQUAL_TO':([17,39,41,46,47,48,49,52,53,54,55,56,76,78,79,80,81,92,95,96,100,101,102,108,110,114,116,117,118,119,131,132,133,134,135,136,145,146,147,151,152,153,154,155,160,161,162,163,164,172,173,182,192,195,],[-95,-92,-94,90,-95,-95,-83,-86,-87,-88,-89,-90,-95,-95,-95,-95,-95,-74,-77,-78,-82,-84,-85,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-91,-93,-95,-95,90,90,90,90,-95,-75,-76,-79,-80,-81,-95,90,-95,90,90,]),'RBRACKET':([17,39,41,47,48,49,52,53,54,55,56,69,92,95,96,100,101,102,107,108,131,132,133,134,135,136,145,160,161,162,163,164,183,],[-95,-92,-94,-95,-95,-83,-86,-87,-88,-89,-90,108,-74,-77,-78,-82,-84,-85,144,-95,-95,-95,-95,-95,-95,-91,-93,-75,-76,-79,-80,-81,196,]),'RPAREN':([17,39,41,46,47,48,49,52,53,54,55,56,72,75,76,77,78,79,80,81,84,91,92,95,96,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,129,130,131,132,133,134,135,136,139,143,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,168,169,170,172,173,174,175,176,177,178,179,180,181,182,187,188,189,190,191,192,193,194,195,196,198,200,201,202,203,204,205,],[-95,-92,-94,-95,-95,-95,-83,-86,-87,-88,-89,-90,-29,-32,-95,-34,-95,-95,-95,-95,-66,-73,-74,-77,-78,-82,-84,-85,136,137,-95,-95,-30,-95,-36,-31,-33,-95,-95,-95,-95,-95,-95,155,-59,-67,-68,-69,-70,-71,-72,-95,-95,-95,-95,-95,-91,167,-11,-93,-95,-95,174,-95,-46,-95,-95,-95,-95,-95,-60,-61,-62,-75,-76,-79,-80,-81,-95,-95,-95,-95,-95,-43,-45,-95,-48,-37,-38,-39,-40,-95,-8,-95,-13,-9,-10,-95,-42,-47,-95,-95,209,-12,-35,-41,-63,-64,-65,]),'INT_CONSTANT':([21,40,44,50,51,57,59,67,73,74,82,85,86,87,88,89,90,93,94,97,98,99,138,157,],[52,52,78,52,52,52,52,107,78,78,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'FLOAT_CONSTANT':([21,40,44,50,51,57,59,73,74,82,85,86,87,88,89,90,93,94,97,98,99,138,157,],[53,53,79,53,53,53,53,79,79,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'STRING_CONSTANT':([21,40,44,50,51,57,59,73,74,82,85,86,87,88,89,90,93,94,97,98,99,138,157,],[54,54,80,54,54,54,54,80,80,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'NULL':([21,40,44,50,51,57,59,73,74,82,85,86,87,88,89,90,93,94,97,98,99,138,157,],[55,55,81,55,55,55,55,81,81,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'LPAREN':([21,24,25,40,44,50,51,57,59,61,73,74,76,82,85,86,87,88,89,90,93,94,97,98,99,138,157,],[57,59,60,57,82,57,57,57,57,106,82,82,115,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'NEW':([44,],[83,]),'COMMA':([149,168,169,170,],[176,188,188,188,]),'ELSE':([197,],[207,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,13,33,165,186,207,209,],[2,33,33,33,33,211,212,]),'funclist':([0,15,],[3,36,]),'empty':([0,15,17,33,38,42,43,46,47,48,76,78,79,80,81,106,108,110,114,115,116,117,118,119,131,132,133,134,135,144,146,147,149,151,152,153,154,155,168,169,170,172,173,176,182,188,192,195,196,197,],[4,37,41,65,68,68,68,91,95,100,41,100,100,100,100,143,41,41,100,150,95,95,95,95,95,95,100,100,100,68,100,95,177,91,91,91,91,100,189,189,189,95,91,150,95,143,91,91,205,208,]),'vardecl':([0,13,33,165,186,207,209,],[5,5,5,5,5,5,5,]),'atribstat':([0,13,33,60,165,185,186,207,209,],[7,7,7,105,7,198,7,7,7,]),'printstat':([0,13,33,165,186,207,209,],[8,8,8,8,8,8,8,]),'readstat':([0,13,33,165,186,207,209,],[9,9,9,9,9,9,9,]),'returnstat':([0,13,33,165,186,207,209,],[10,10,10,10,10,10,10,]),'ifstat':([0,13,33,165,186,207,209,],[11,11,11,11,11,11,11,]),'forstat':([0,13,33,165,186,207,209,],[12,12,12,12,12,12,12,]),'funcdef':([0,15,],[15,15,]),'lvalue':([0,13,21,22,33,40,50,51,57,59,60,82,85,86,87,88,89,90,93,94,97,98,99,138,157,165,185,186,207,209,],[20,20,56,58,20,56,56,56,56,56,20,56,56,56,56,56,56,56,56,56,56,56,56,56,56,20,20,20,20,20,]),'statelist':([13,33,165,186,],[32,64,184,199,]),'_funclist':([15,],[35,]),'lvalue_line':([17,76,108,110,],[39,114,145,146,]),'expression':([21,59,138,],[45,104,166,]),'numexpression':([21,40,57,59,82,85,86,87,88,89,90,138,157,],[46,69,103,46,120,125,126,127,128,129,130,46,183,]),'term':([21,40,57,59,82,85,86,87,88,89,90,93,94,138,157,],[47,47,47,47,47,47,47,47,47,47,47,131,132,47,47,]),'unaryexpr':([21,40,57,59,82,85,86,87,88,89,90,93,94,97,98,99,138,157,],[48,48,48,48,48,48,48,48,48,48,48,48,48,133,134,135,48,48,]),'factor':([21,40,50,51,57,59,82,85,86,87,88,89,90,93,94,97,98,99,138,157,],[49,49,101,102,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'_statelist':([33,],[63,]),'vardecl_line':([38,42,43,144,],[66,70,71,171,]),'_atribstat':([44,],[72,]),'__atribstat':([44,73,74,],[75,111,111,]),'allocexpression':([44,],[77,]),'_expression':([46,151,152,153,154,173,192,195,],[84,178,179,180,181,193,201,202,]),'numexpression_line':([47,116,117,118,119,131,132,147,172,182,],[92,151,152,153,154,160,161,173,192,195,]),'term_line':([48,78,79,80,81,114,133,134,135,146,155,],[96,116,117,118,119,147,162,163,164,172,182,]),'_atribstat_help':([73,74,],[109,112,]),'___atribstat':([76,],[113,]),'_allocexpression':([83,],[121,]),'paramlist':([106,188,],[139,200,]),'paramlistcall':([115,176,],[148,194,]),'allocexpression_line':([122,123,124,196,],[156,158,159,204,]),'_paramlistcall':([149,],[175,]),'_paramlist':([168,169,170,],[187,190,191,]),'_allocexpression_line':([196,],[203,]),'_ifstat':([197,],[206,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','draguitax.py',14),
  ('program -> funclist','program',1,'p_program','draguitax.py',15),
  ('program -> empty','program',1,'p_program','draguitax.py',16),
  ('funclist -> funcdef _funclist','funclist',2,'p_funclist','draguitax.py',22),
  ('_funclist -> funclist','_funclist',1,'p__funclist','draguitax.py',28),
  ('_funclist -> empty','_funclist',1,'p__funclist','draguitax.py',29),
  ('funcdef -> DEFINE IDENT LPAREN paramlist RPAREN LBRACES statelist RBRACES','funcdef',8,'p_funcdef','draguitax.py',35),
  ('paramlist -> INT IDENT _paramlist','paramlist',3,'p_paramlist','draguitax.py',41),
  ('paramlist -> FLOAT IDENT _paramlist','paramlist',3,'p_paramlist','draguitax.py',42),
  ('paramlist -> STRING IDENT _paramlist','paramlist',3,'p_paramlist','draguitax.py',43),
  ('paramlist -> empty','paramlist',1,'p_paramlist','draguitax.py',44),
  ('_paramlist -> COMMA paramlist','_paramlist',2,'p__paramlist','draguitax.py',50),
  ('_paramlist -> empty','_paramlist',1,'p__paramlist','draguitax.py',51),
  ('statement -> vardecl SEMICOLON','statement',2,'p_statement','draguitax.py',57),
  ('statement -> atribstat SEMICOLON','statement',2,'p_statement','draguitax.py',58),
  ('statement -> printstat SEMICOLON','statement',2,'p_statement','draguitax.py',59),
  ('statement -> readstat SEMICOLON','statement',2,'p_statement','draguitax.py',60),
  ('statement -> returnstat SEMICOLON','statement',2,'p_statement','draguitax.py',61),
  ('statement -> ifstat','statement',1,'p_statement','draguitax.py',62),
  ('statement -> forstat','statement',1,'p_statement','draguitax.py',63),
  ('statement -> LBRACES statelist RBRACES','statement',3,'p_statement','draguitax.py',64),
  ('statement -> BREAK SEMICOLON','statement',2,'p_statement','draguitax.py',65),
  ('statement -> SEMICOLON','statement',1,'p_statement','draguitax.py',66),
  ('vardecl -> INT IDENT vardecl_line','vardecl',3,'p_vardecl','draguitax.py',72),
  ('vardecl -> FLOAT IDENT vardecl_line','vardecl',3,'p_vardecl','draguitax.py',73),
  ('vardecl -> STRING IDENT vardecl_line','vardecl',3,'p_vardecl','draguitax.py',74),
  ('vardecl_line -> LBRACKET INT_CONSTANT RBRACKET vardecl_line','vardecl_line',4,'p_vardecl_line','draguitax.py',80),
  ('vardecl_line -> empty','vardecl_line',1,'p_vardecl_line','draguitax.py',81),
  ('atribstat -> lvalue ASSIGN _atribstat','atribstat',3,'p_atribstat','draguitax.py',87),
  ('_atribstat -> PLUS _atribstat_help','_atribstat',2,'p__atribstat','draguitax.py',94),
  ('_atribstat -> MINUS _atribstat_help','_atribstat',2,'p__atribstat','draguitax.py',95),
  ('_atribstat -> __atribstat','_atribstat',1,'p__atribstat','draguitax.py',96),
  ('_atribstat -> IDENT ___atribstat','_atribstat',2,'p__atribstat','draguitax.py',97),
  ('_atribstat -> allocexpression','_atribstat',1,'p__atribstat','draguitax.py',98),
  ('_atribstat_help -> IDENT lvalue_line term_line numexpression_line _expression','_atribstat_help',5,'p__atribstat_help','draguitax.py',104),
  ('_atribstat_help -> __atribstat','_atribstat_help',1,'p__atribstat_help','draguitax.py',105),
  ('__atribstat -> INT_CONSTANT term_line numexpression_line _expression','__atribstat',4,'p___atribstat','draguitax.py',111),
  ('__atribstat -> FLOAT_CONSTANT term_line numexpression_line _expression','__atribstat',4,'p___atribstat','draguitax.py',112),
  ('__atribstat -> STRING_CONSTANT term_line numexpression_line _expression','__atribstat',4,'p___atribstat','draguitax.py',113),
  ('__atribstat -> NULL term_line numexpression_line _expression','__atribstat',4,'p___atribstat','draguitax.py',114),
  ('__atribstat -> LPAREN numexpression RPAREN term_line numexpression_line _expression','__atribstat',6,'p___atribstat','draguitax.py',115),
  ('___atribstat -> lvalue_line term_line numexpression_line _expression','___atribstat',4,'p____atribstat','draguitax.py',120),
  ('___atribstat -> LPAREN paramlistcall RPAREN','___atribstat',3,'p____atribstat','draguitax.py',121),
  ('funccall -> IDENT LPAREN paramlistcall RPAREN','funccall',4,'p_funccall','draguitax.py',127),
  ('paramlistcall -> IDENT _paramlistcall','paramlistcall',2,'p_paramlistcall','draguitax.py',134),
  ('paramlistcall -> empty','paramlistcall',1,'p_paramlistcall','draguitax.py',135),
  ('_paramlistcall -> COMMA paramlistcall','_paramlistcall',2,'p__paramlistcall','draguitax.py',141),
  ('_paramlistcall -> empty','_paramlistcall',1,'p__paramlistcall','draguitax.py',142),
  ('printstat -> PRINT expression','printstat',2,'p_printstat','draguitax.py',148),
  ('readstat -> READ lvalue','readstat',2,'p_readstat','draguitax.py',154),
  ('returnstat -> RETURN','returnstat',1,'p_returnstat','draguitax.py',160),
  ('ifstat -> IF LPAREN expression RPAREN LBRACES statelist RBRACES _ifstat','ifstat',8,'p_ifstat','draguitax.py',166),
  ('_ifstat -> ELSE statement','_ifstat',2,'p__ifstat','draguitax.py',172),
  ('_ifstat -> empty','_ifstat',1,'p__ifstat','draguitax.py',173),
  ('forstat -> FOR LPAREN atribstat SEMICOLON expression SEMICOLON atribstat RPAREN statement','forstat',9,'p_forstat','draguitax.py',179),
  ('statelist -> statement _statelist','statelist',2,'p_statelist','draguitax.py',185),
  ('_statelist -> statelist','_statelist',1,'p__statelist','draguitax.py',191),
  ('_statelist -> empty','_statelist',1,'p__statelist','draguitax.py',192),
  ('allocexpression -> NEW _allocexpression','allocexpression',2,'p_allocexpression','draguitax.py',198),
  ('_allocexpression -> INT allocexpression_line','_allocexpression',2,'p__allocexpression','draguitax.py',204),
  ('_allocexpression -> FLOAT allocexpression_line','_allocexpression',2,'p__allocexpression','draguitax.py',205),
  ('_allocexpression -> STRING allocexpression_line','_allocexpression',2,'p__allocexpression','draguitax.py',206),
  ('allocexpression_line -> LBRACKET numexpression RBRACKET _allocexpression_line','allocexpression_line',4,'p_allocexpression_line','draguitax.py',212),
  ('_allocexpression_line -> allocexpression_line','_allocexpression_line',1,'p__allocexpression_line','draguitax.py',218),
  ('_allocexpression_line -> empty','_allocexpression_line',1,'p__allocexpression_line','draguitax.py',219),
  ('expression -> numexpression _expression','expression',2,'p_expression','draguitax.py',225),
  ('_expression -> LESS_THAN numexpression','_expression',2,'p__expression','draguitax.py',231),
  ('_expression -> GREATER_THAN numexpression','_expression',2,'p__expression','draguitax.py',232),
  ('_expression -> LESS_EQUAL_THAN numexpression','_expression',2,'p__expression','draguitax.py',233),
  ('_expression -> GREATER_EQUAL_THAN numexpression','_expression',2,'p__expression','draguitax.py',234),
  ('_expression -> EQUAL_TO numexpression','_expression',2,'p__expression','draguitax.py',235),
  ('_expression -> NOT_EQUAL_TO numexpression','_expression',2,'p__expression','draguitax.py',236),
  ('_expression -> empty','_expression',1,'p__expression','draguitax.py',237),
  ('numexpression -> term numexpression_line','numexpression',2,'p_numexpression','draguitax.py',243),
  ('numexpression_line -> PLUS term numexpression_line','numexpression_line',3,'p_numexpression_line','draguitax.py',249),
  ('numexpression_line -> MINUS term numexpression_line','numexpression_line',3,'p_numexpression_line','draguitax.py',250),
  ('numexpression_line -> empty','numexpression_line',1,'p_numexpression_line','draguitax.py',251),
  ('term -> unaryexpr term_line','term',2,'p_term','draguitax.py',257),
  ('term_line -> TIMES unaryexpr term_line','term_line',3,'p_term_line','draguitax.py',263),
  ('term_line -> DIVIDE unaryexpr term_line','term_line',3,'p_term_line','draguitax.py',264),
  ('term_line -> MODULO unaryexpr term_line','term_line',3,'p_term_line','draguitax.py',265),
  ('term_line -> empty','term_line',1,'p_term_line','draguitax.py',266),
  ('unaryexpr -> factor','unaryexpr',1,'p_unaryexpr','draguitax.py',272),
  ('unaryexpr -> PLUS factor','unaryexpr',2,'p_unaryexpr','draguitax.py',273),
  ('unaryexpr -> MINUS factor','unaryexpr',2,'p_unaryexpr','draguitax.py',274),
  ('factor -> INT_CONSTANT','factor',1,'p_factor','draguitax.py',280),
  ('factor -> FLOAT_CONSTANT','factor',1,'p_factor','draguitax.py',281),
  ('factor -> STRING_CONSTANT','factor',1,'p_factor','draguitax.py',282),
  ('factor -> NULL','factor',1,'p_factor','draguitax.py',283),
  ('factor -> lvalue','factor',1,'p_factor','draguitax.py',284),
  ('factor -> LPAREN numexpression RPAREN','factor',3,'p_factor','draguitax.py',285),
  ('lvalue -> IDENT lvalue_line','lvalue',2,'p_lvalue','draguitax.py',291),
  ('lvalue_line -> LBRACKET numexpression RBRACKET lvalue_line','lvalue_line',4,'p_lvalue_line','draguitax.py',297),
  ('lvalue_line -> empty','lvalue_line',1,'p_lvalue_line','draguitax.py',298),
  ('empty -> <empty>','empty',0,'p_empty','draguitax.py',304),
]
