
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BREAK COMMA COMMENT DEFINE DIVIDE ELSE EQUAL_TO FLOAT FLOAT_CONSTANT FOR GREATER_EQUAL_THAN GREATER_THAN IDENT IF INT INT_CONSTANT LBRACES LBRACKET LESS_EQUAL_THAN LESS_THAN LPAREN MINUS MODULO NEW NOT_EQUAL_TO NULL PLUS PRINT RBRACES RBRACKET READ RETURN RPAREN SEMICOLON STRING STRING_CONSTANT TIMESprogram : statement\n              | funclist\n              | empty\n    funclist : funcdef _funclist\n    _funclist : funclist\n                | empty\n    funcdef : DEFINE IDENT LPAREN paramlist RPAREN LBRACES statelist RBRACES\n    paramlist : INT IDENT _paramlist\n                | FLOAT IDENT _paramlist\n                | STRING IDENT _paramlist\n                | empty\n    _paramlist : COMMA paramlist\n                 | empty\n    statement : vardecl SEMICOLON\n                | atribstat SEMICOLON\n                | printstat SEMICOLON\n                | readstat SEMICOLON\n                | returnstat SEMICOLON\n                | ifstat\n                | forstat \n                | LBRACES statelist RBRACES\n                | BREAK SEMICOLON\n                | SEMICOLON\n    vardecl : INT IDENT vardecl_line\n              | FLOAT IDENT vardecl_line\n              | STRING IDENT vardecl_line\n    vardecl_line : LBRACKET INT_CONSTANT RBRACKET vardecl_line\n                   | empty\n    atribstat : lvalue ASSIGN _atribstat\n    _atribstat : PLUS _atribstat_help\n                 | MINUS _atribstat_help\n                 | __atribstat\n                 | IDENT ___atribstat\n                 | allocexpression\n    _atribstat_help : IDENT lvalue_line term_line numexpression_line _expression\n                      | __atribstat\n    __atribstat : INT_CONSTANT term_line numexpression_line _expression\n                 | FLOAT_CONSTANT term_line numexpression_line _expression\n                 | STRING_CONSTANT term_line numexpression_line _expression\n                 | NULL term_line numexpression_line _expression\n                 | LPAREN numexpression RPAREN term_line numexpression_line _expression\n    ___atribstat : lvalue_line term_line numexpression_line _expression\n                  | LPAREN paramlistcall RPAREN\n    funccall : IDENT LPAREN paramlistcall RPAREN\n    paramlistcall : IDENT _paramlistcall\n\t\t\t         | empty\n    _paramlistcall : COMMA paramlistcall\n\t\t\t          | empty\n    printstat : PRINT expression\n    readstat : READ lvalue\n    returnstat : RETURN\n    ifstat : IF LPAREN expression RPAREN LBRACES statement RBRACES _ifstat\n    _ifstat : ELSE LBRACES statement RBRACES\n              | empty\n    forstat : FOR LPAREN atribstat SEMICOLON expression SEMICOLON atribstat RPAREN LBRACES statement RBRACES\n    statelist : statement _statelist\n    _statelist : statelist\n                 | empty\n    allocexpression : NEW _allocexpression\n    _allocexpression : INT allocexpression_line\n                       | FLOAT allocexpression_line\n                       | STRING allocexpression_line\n    allocexpression_line : LBRACKET numexpression RBRACKET _allocexpression_line\n    _allocexpression_line : allocexpression_line\n                            | empty\n    expression : numexpression _expression\n    _expression : LESS_THAN numexpression\n                  | GREATER_THAN numexpression\n                  | LESS_EQUAL_THAN numexpression\n                  | GREATER_EQUAL_THAN numexpression\n                  | EQUAL_TO numexpression\n                  | NOT_EQUAL_TO numexpression\n    numexpression : term numexpression_line\n    numexpression_line : PLUS term numexpression_line\n                         | MINUS term numexpression_line\n                         | empty\n    term : unaryexpre term_line\n    term_line : TIMES unaryexpre term_line\n                | DIVIDE unaryexpre term_line\n                | MODULO unaryexpre term_line\n                | empty\n    unaryexpre : factor\n                 | PLUS factor\n                 | MINUS factor\n    factor : INT_CONSTANT\n             | FLOAT_CONSTANT\n             | STRING_CONSTANT\n             | NULL\n             | lvalue\n             | LPAREN numexpression RPAREN\n    lvalue : IDENT lvalue_line\n    lvalue_line : LBRACKET numexpression RBRACKET lvalue_line\n                  | empty\n    empty :'
    
_lr_action_items = {'LBRACES':([0,6,11,12,13,27,28,29,30,31,33,34,62,136,164,166,185,196,205,206,207,208,210,211,214,215,],[13,-23,-19,-20,13,-14,-15,-16,-17,-18,13,-22,-21,164,13,185,13,-94,-52,210,-54,211,13,13,-53,-55,]),'BREAK':([0,6,11,12,13,27,28,29,30,31,33,34,62,164,185,196,205,207,210,211,214,215,],[14,-23,-19,-20,14,-14,-15,-16,-17,-18,14,-22,-21,14,14,-94,-52,-54,14,14,-53,-55,]),'SEMICOLON':([0,5,6,7,8,9,10,11,12,13,14,17,23,27,28,29,30,31,33,34,38,39,41,42,43,45,47,48,49,52,53,54,55,56,58,62,66,68,70,71,72,75,77,84,91,94,95,99,100,101,104,107,108,110,111,112,120,124,125,126,127,128,129,130,131,132,133,134,135,143,144,155,157,158,159,160,161,162,163,164,165,170,173,177,178,179,180,185,192,195,196,200,201,202,203,204,205,207,210,211,214,215,],[6,27,-23,28,29,30,31,-19,-20,6,34,-94,-51,-14,-15,-16,-17,-18,6,-22,-94,-91,-93,-94,-94,-49,-94,-94,-82,-85,-86,-87,-88,-89,-50,-21,-24,-28,-25,-26,-29,-32,-34,-66,-73,-76,-77,-81,-83,-84,137,-94,-30,-36,-31,-33,-59,-67,-68,-69,-70,-71,-72,-94,-94,-94,-94,-94,-90,-94,-92,-60,-61,-62,-74,-75,-78,-79,-80,6,184,-27,-43,-37,-38,-39,-40,6,-42,-94,-94,-35,-41,-63,-64,-65,-52,-54,6,6,-53,-55,]),'$end':([0,1,2,3,4,6,11,12,15,27,28,29,30,31,34,35,36,37,62,196,205,207,209,214,215,],[-94,0,-1,-2,-3,-23,-19,-20,-94,-14,-15,-16,-17,-18,-22,-4,-5,-6,-21,-94,-52,-54,-7,-53,-55,]),'INT':([0,6,11,12,13,27,28,29,30,31,33,34,62,83,105,164,185,187,196,205,207,210,211,214,215,],[16,-23,-19,-20,16,-14,-15,-16,-17,-18,16,-22,-21,121,139,16,16,139,-94,-52,-54,16,16,-53,-55,]),'FLOAT':([0,6,11,12,13,27,28,29,30,31,33,34,62,83,105,164,185,187,196,205,207,210,211,214,215,],[18,-23,-19,-20,18,-14,-15,-16,-17,-18,18,-22,-21,122,140,18,18,140,-94,-52,-54,18,18,-53,-55,]),'STRING':([0,6,11,12,13,27,28,29,30,31,33,34,62,83,105,164,185,187,196,205,207,210,211,214,215,],[19,-23,-19,-20,19,-14,-15,-16,-17,-18,19,-22,-21,123,141,19,19,141,-94,-52,-54,19,19,-53,-55,]),'PRINT':([0,6,11,12,13,27,28,29,30,31,33,34,62,164,185,196,205,207,210,211,214,215,],[21,-23,-19,-20,21,-14,-15,-16,-17,-18,21,-22,-21,21,21,-94,-52,-54,21,21,-53,-55,]),'READ':([0,6,11,12,13,27,28,29,30,31,33,34,62,164,185,196,205,207,210,211,214,215,],[22,-23,-19,-20,22,-14,-15,-16,-17,-18,22,-22,-21,22,22,-94,-52,-54,22,22,-53,-55,]),'RETURN':([0,6,11,12,13,27,28,29,30,31,33,34,62,164,185,196,205,207,210,211,214,215,],[23,-23,-19,-20,23,-14,-15,-16,-17,-18,23,-22,-21,23,23,-94,-52,-54,23,23,-53,-55,]),'IF':([0,6,11,12,13,27,28,29,30,31,33,34,62,164,185,196,205,207,210,211,214,215,],[24,-23,-19,-20,24,-14,-15,-16,-17,-18,24,-22,-21,24,24,-94,-52,-54,24,24,-53,-55,]),'FOR':([0,6,11,12,13,27,28,29,30,31,33,34,62,164,185,196,205,207,210,211,214,215,],[25,-23,-19,-20,25,-14,-15,-16,-17,-18,25,-22,-21,25,25,-94,-52,-54,25,25,-53,-55,]),'DEFINE':([0,15,209,],[26,26,-7,]),'IDENT':([0,6,11,12,13,16,18,19,21,22,26,27,28,29,30,31,33,34,40,44,50,51,57,59,60,62,73,74,82,85,86,87,88,89,90,92,93,96,97,98,114,137,139,140,141,156,164,175,184,185,196,205,207,210,211,214,215,],[17,-23,-19,-20,17,38,42,43,17,17,61,-14,-15,-16,-17,-18,17,-22,17,76,17,17,17,17,17,-21,109,109,17,17,17,17,17,17,17,17,17,17,17,17,148,17,167,168,169,17,17,148,17,17,-94,-52,-54,17,17,-53,-55,]),'RBRACES':([6,11,12,27,28,29,30,31,32,33,34,62,63,64,65,183,196,198,205,207,212,213,214,215,],[-23,-19,-20,-14,-15,-16,-17,-18,62,-94,-22,-21,-56,-57,-58,196,-94,209,-52,-54,214,215,-53,-55,]),'LBRACKET':([17,38,42,43,76,107,109,121,122,123,143,195,],[40,67,67,67,40,40,40,156,156,156,67,156,]),'ASSIGN':([17,20,39,41,107,144,],[-94,44,-91,-93,-94,-92,]),'TIMES':([17,39,41,48,49,52,53,54,55,56,76,78,79,80,81,100,101,107,109,113,132,133,134,135,144,145,154,],[-94,-91,-93,96,-82,-85,-86,-87,-88,-89,-94,96,96,96,96,-83,-84,-94,-94,96,96,96,96,-90,-92,96,96,]),'DIVIDE':([17,39,41,48,49,52,53,54,55,56,76,78,79,80,81,100,101,107,109,113,132,133,134,135,144,145,154,],[-94,-91,-93,97,-82,-85,-86,-87,-88,-89,-94,97,97,97,97,-83,-84,-94,-94,97,97,97,97,-90,-92,97,97,]),'MODULO':([17,39,41,48,49,52,53,54,55,56,76,78,79,80,81,100,101,107,109,113,132,133,134,135,144,145,154,],[-94,-91,-93,98,-82,-85,-86,-87,-88,-89,-94,98,98,98,98,-83,-84,-94,-94,98,98,98,98,-90,-92,98,98,]),'PLUS':([17,21,39,40,41,44,47,48,49,52,53,54,55,56,57,59,76,78,79,80,81,82,85,86,87,88,89,90,92,93,95,96,97,98,99,100,101,107,109,113,115,116,117,118,130,131,132,133,134,135,137,144,145,146,154,156,161,162,163,171,181,],[-94,50,-91,50,-93,73,92,-94,-82,-85,-86,-87,-88,-89,50,50,-94,-94,-94,-94,-94,50,50,50,50,50,50,50,50,50,-77,50,50,50,-81,-83,-84,-94,-94,-94,92,92,92,92,92,92,-94,-94,-94,-90,50,-92,-94,92,-94,50,-78,-79,-80,92,92,]),'MINUS':([17,21,39,40,41,44,47,48,49,52,53,54,55,56,57,59,76,78,79,80,81,82,85,86,87,88,89,90,92,93,95,96,97,98,99,100,101,107,109,113,115,116,117,118,130,131,132,133,134,135,137,144,145,146,154,156,161,162,163,171,181,],[-94,51,-91,51,-93,74,93,-94,-82,-85,-86,-87,-88,-89,51,51,-94,-94,-94,-94,-94,51,51,51,51,51,51,51,51,51,-77,51,51,51,-81,-83,-84,-94,-94,-94,93,93,93,93,93,93,-94,-94,-94,-90,51,-92,-94,93,-94,51,-78,-79,-80,93,93,]),'LESS_THAN':([17,39,41,46,47,48,49,52,53,54,55,56,76,78,79,80,81,91,94,95,99,100,101,107,109,113,115,116,117,118,130,131,132,133,134,135,144,145,146,150,151,152,153,154,159,160,161,162,163,171,172,181,191,194,],[-94,-91,-93,85,-94,-94,-82,-85,-86,-87,-88,-89,-94,-94,-94,-94,-94,-73,-76,-77,-81,-83,-84,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-90,-92,-94,-94,85,85,85,85,-94,-74,-75,-78,-79,-80,-94,85,-94,85,85,]),'GREATER_THAN':([17,39,41,46,47,48,49,52,53,54,55,56,76,78,79,80,81,91,94,95,99,100,101,107,109,113,115,116,117,118,130,131,132,133,134,135,144,145,146,150,151,152,153,154,159,160,161,162,163,171,172,181,191,194,],[-94,-91,-93,86,-94,-94,-82,-85,-86,-87,-88,-89,-94,-94,-94,-94,-94,-73,-76,-77,-81,-83,-84,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-90,-92,-94,-94,86,86,86,86,-94,-74,-75,-78,-79,-80,-94,86,-94,86,86,]),'LESS_EQUAL_THAN':([17,39,41,46,47,48,49,52,53,54,55,56,76,78,79,80,81,91,94,95,99,100,101,107,109,113,115,116,117,118,130,131,132,133,134,135,144,145,146,150,151,152,153,154,159,160,161,162,163,171,172,181,191,194,],[-94,-91,-93,87,-94,-94,-82,-85,-86,-87,-88,-89,-94,-94,-94,-94,-94,-73,-76,-77,-81,-83,-84,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-90,-92,-94,-94,87,87,87,87,-94,-74,-75,-78,-79,-80,-94,87,-94,87,87,]),'GREATER_EQUAL_THAN':([17,39,41,46,47,48,49,52,53,54,55,56,76,78,79,80,81,91,94,95,99,100,101,107,109,113,115,116,117,118,130,131,132,133,134,135,144,145,146,150,151,152,153,154,159,160,161,162,163,171,172,181,191,194,],[-94,-91,-93,88,-94,-94,-82,-85,-86,-87,-88,-89,-94,-94,-94,-94,-94,-73,-76,-77,-81,-83,-84,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-90,-92,-94,-94,88,88,88,88,-94,-74,-75,-78,-79,-80,-94,88,-94,88,88,]),'EQUAL_TO':([17,39,41,46,47,48,49,52,53,54,55,56,76,78,79,80,81,91,94,95,99,100,101,107,109,113,115,116,117,118,130,131,132,133,134,135,144,145,146,150,151,152,153,154,159,160,161,162,163,171,172,181,191,194,],[-94,-91,-93,89,-94,-94,-82,-85,-86,-87,-88,-89,-94,-94,-94,-94,-94,-73,-76,-77,-81,-83,-84,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-90,-92,-94,-94,89,89,89,89,-94,-74,-75,-78,-79,-80,-94,89,-94,89,89,]),'NOT_EQUAL_TO':([17,39,41,46,47,48,49,52,53,54,55,56,76,78,79,80,81,91,94,95,99,100,101,107,109,113,115,116,117,118,130,131,132,133,134,135,144,145,146,150,151,152,153,154,159,160,161,162,163,171,172,181,191,194,],[-94,-91,-93,90,-94,-94,-82,-85,-86,-87,-88,-89,-94,-94,-94,-94,-94,-73,-76,-77,-81,-83,-84,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-90,-92,-94,-94,90,90,90,90,-94,-74,-75,-78,-79,-80,-94,90,-94,90,90,]),'RBRACKET':([17,39,41,47,48,49,52,53,54,55,56,69,91,94,95,99,100,101,106,107,130,131,132,133,134,135,144,159,160,161,162,163,182,],[-94,-91,-93,-94,-94,-82,-85,-86,-87,-88,-89,107,-73,-76,-77,-81,-83,-84,143,-94,-94,-94,-94,-94,-94,-90,-92,-74,-75,-78,-79,-80,195,]),'RPAREN':([17,39,41,47,48,49,52,53,54,55,56,72,75,77,84,91,94,95,99,100,101,102,103,105,107,108,110,111,112,114,119,120,124,125,126,127,128,129,130,131,132,133,134,135,138,142,144,147,148,149,155,157,158,159,160,161,162,163,167,168,169,173,174,175,176,177,178,179,180,186,187,188,189,190,192,193,195,197,199,200,201,202,203,204,],[-94,-91,-93,-94,-94,-82,-85,-86,-87,-88,-89,-29,-32,-34,-66,-73,-76,-77,-81,-83,-84,135,136,-94,-94,-30,-36,-31,-33,-94,154,-59,-67,-68,-69,-70,-71,-72,-94,-94,-94,-94,-94,-90,166,-11,-92,173,-94,-46,-60,-61,-62,-74,-75,-78,-79,-80,-94,-94,-94,-43,-45,-94,-48,-37,-38,-39,-40,-8,-94,-13,-9,-10,-42,-47,-94,208,-12,-35,-41,-63,-64,-65,]),'INT_CONSTANT':([21,40,44,50,51,57,59,67,73,74,82,85,86,87,88,89,90,92,93,96,97,98,137,156,],[52,52,78,52,52,52,52,106,78,78,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'FLOAT_CONSTANT':([21,40,44,50,51,57,59,73,74,82,85,86,87,88,89,90,92,93,96,97,98,137,156,],[53,53,79,53,53,53,53,79,79,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'STRING_CONSTANT':([21,40,44,50,51,57,59,73,74,82,85,86,87,88,89,90,92,93,96,97,98,137,156,],[54,54,80,54,54,54,54,80,80,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'NULL':([21,40,44,50,51,57,59,73,74,82,85,86,87,88,89,90,92,93,96,97,98,137,156,],[55,55,81,55,55,55,55,81,81,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'LPAREN':([21,24,25,40,44,50,51,57,59,61,73,74,76,82,85,86,87,88,89,90,92,93,96,97,98,137,156,],[57,59,60,57,82,57,57,57,57,105,82,82,114,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'NEW':([44,],[83,]),'COMMA':([148,167,168,169,],[175,187,187,187,]),'ELSE':([196,],[206,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,13,33,164,185,210,211,],[2,33,33,183,33,212,213,]),'funclist':([0,15,],[3,36,]),'empty':([0,15,17,33,38,42,43,47,48,76,78,79,80,81,105,107,109,113,114,115,116,117,118,130,131,132,133,134,143,145,146,148,154,167,168,169,171,175,181,187,195,196,],[4,37,41,65,68,68,68,94,99,41,99,99,99,99,142,41,41,99,149,94,94,94,94,94,94,99,99,99,68,99,94,176,99,188,188,188,94,149,94,142,204,207,]),'vardecl':([0,13,33,164,185,210,211,],[5,5,5,5,5,5,5,]),'atribstat':([0,13,33,60,164,184,185,210,211,],[7,7,7,104,7,197,7,7,7,]),'printstat':([0,13,33,164,185,210,211,],[8,8,8,8,8,8,8,]),'readstat':([0,13,33,164,185,210,211,],[9,9,9,9,9,9,9,]),'returnstat':([0,13,33,164,185,210,211,],[10,10,10,10,10,10,10,]),'ifstat':([0,13,33,164,185,210,211,],[11,11,11,11,11,11,11,]),'forstat':([0,13,33,164,185,210,211,],[12,12,12,12,12,12,12,]),'funcdef':([0,15,],[15,15,]),'lvalue':([0,13,21,22,33,40,50,51,57,59,60,82,85,86,87,88,89,90,92,93,96,97,98,137,156,164,184,185,210,211,],[20,20,56,58,20,56,56,56,56,56,20,56,56,56,56,56,56,56,56,56,56,56,56,56,56,20,20,20,20,20,]),'statelist':([13,33,185,],[32,64,198,]),'_funclist':([15,],[35,]),'lvalue_line':([17,76,107,109,],[39,113,144,145,]),'expression':([21,59,137,],[45,103,165,]),'numexpression':([21,40,57,59,82,85,86,87,88,89,90,137,156,],[46,69,102,46,119,124,125,126,127,128,129,46,182,]),'term':([21,40,57,59,82,85,86,87,88,89,90,92,93,137,156,],[47,47,47,47,47,47,47,47,47,47,47,130,131,47,47,]),'unaryexpre':([21,40,57,59,82,85,86,87,88,89,90,92,93,96,97,98,137,156,],[48,48,48,48,48,48,48,48,48,48,48,48,48,132,133,134,48,48,]),'factor':([21,40,50,51,57,59,82,85,86,87,88,89,90,92,93,96,97,98,137,156,],[49,49,100,101,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'_statelist':([33,],[63,]),'vardecl_line':([38,42,43,143,],[66,70,71,170,]),'_atribstat':([44,],[72,]),'__atribstat':([44,73,74,],[75,110,110,]),'allocexpression':([44,],[77,]),'_expression':([46,150,151,152,153,172,191,194,],[84,177,178,179,180,192,200,201,]),'numexpression_line':([47,115,116,117,118,130,131,146,171,181,],[91,150,151,152,153,159,160,172,191,194,]),'term_line':([48,78,79,80,81,113,132,133,134,145,154,],[95,115,116,117,118,146,161,162,163,171,181,]),'_atribstat_help':([73,74,],[108,111,]),'___atribstat':([76,],[112,]),'_allocexpression':([83,],[120,]),'paramlist':([105,187,],[138,199,]),'paramlistcall':([114,175,],[147,193,]),'allocexpression_line':([121,122,123,195,],[155,157,158,203,]),'_paramlistcall':([148,],[174,]),'_paramlist':([167,168,169,],[186,189,190,]),'_allocexpression_line':([195,],[202,]),'_ifstat':([196,],[205,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','draguitax.py',14),
  ('program -> funclist','program',1,'p_program','draguitax.py',15),
  ('program -> empty','program',1,'p_program','draguitax.py',16),
  ('funclist -> funcdef _funclist','funclist',2,'p_funclist','draguitax.py',22),
  ('_funclist -> funclist','_funclist',1,'p__funclist','draguitax.py',28),
  ('_funclist -> empty','_funclist',1,'p__funclist','draguitax.py',29),
  ('funcdef -> DEFINE IDENT LPAREN paramlist RPAREN LBRACES statelist RBRACES','funcdef',8,'p_funcdef','draguitax.py',35),
  ('paramlist -> INT IDENT _paramlist','paramlist',3,'p_paramlist','draguitax.py',41),
  ('paramlist -> FLOAT IDENT _paramlist','paramlist',3,'p_paramlist','draguitax.py',42),
  ('paramlist -> STRING IDENT _paramlist','paramlist',3,'p_paramlist','draguitax.py',43),
  ('paramlist -> empty','paramlist',1,'p_paramlist','draguitax.py',44),
  ('_paramlist -> COMMA paramlist','_paramlist',2,'p__paramlist','draguitax.py',50),
  ('_paramlist -> empty','_paramlist',1,'p__paramlist','draguitax.py',51),
  ('statement -> vardecl SEMICOLON','statement',2,'p_statement','draguitax.py',57),
  ('statement -> atribstat SEMICOLON','statement',2,'p_statement','draguitax.py',58),
  ('statement -> printstat SEMICOLON','statement',2,'p_statement','draguitax.py',59),
  ('statement -> readstat SEMICOLON','statement',2,'p_statement','draguitax.py',60),
  ('statement -> returnstat SEMICOLON','statement',2,'p_statement','draguitax.py',61),
  ('statement -> ifstat','statement',1,'p_statement','draguitax.py',62),
  ('statement -> forstat','statement',1,'p_statement','draguitax.py',63),
  ('statement -> LBRACES statelist RBRACES','statement',3,'p_statement','draguitax.py',64),
  ('statement -> BREAK SEMICOLON','statement',2,'p_statement','draguitax.py',65),
  ('statement -> SEMICOLON','statement',1,'p_statement','draguitax.py',66),
  ('vardecl -> INT IDENT vardecl_line','vardecl',3,'p_vardecl','draguitax.py',72),
  ('vardecl -> FLOAT IDENT vardecl_line','vardecl',3,'p_vardecl','draguitax.py',73),
  ('vardecl -> STRING IDENT vardecl_line','vardecl',3,'p_vardecl','draguitax.py',74),
  ('vardecl_line -> LBRACKET INT_CONSTANT RBRACKET vardecl_line','vardecl_line',4,'p_vardecl_line','draguitax.py',80),
  ('vardecl_line -> empty','vardecl_line',1,'p_vardecl_line','draguitax.py',81),
  ('atribstat -> lvalue ASSIGN _atribstat','atribstat',3,'p_atribstat','draguitax.py',87),
  ('_atribstat -> PLUS _atribstat_help','_atribstat',2,'p__atribstat','draguitax.py',93),
  ('_atribstat -> MINUS _atribstat_help','_atribstat',2,'p__atribstat','draguitax.py',94),
  ('_atribstat -> __atribstat','_atribstat',1,'p__atribstat','draguitax.py',95),
  ('_atribstat -> IDENT ___atribstat','_atribstat',2,'p__atribstat','draguitax.py',96),
  ('_atribstat -> allocexpression','_atribstat',1,'p__atribstat','draguitax.py',97),
  ('_atribstat_help -> IDENT lvalue_line term_line numexpression_line _expression','_atribstat_help',5,'p__atribstat_help','draguitax.py',103),
  ('_atribstat_help -> __atribstat','_atribstat_help',1,'p__atribstat_help','draguitax.py',104),
  ('__atribstat -> INT_CONSTANT term_line numexpression_line _expression','__atribstat',4,'p___atribstat','draguitax.py',110),
  ('__atribstat -> FLOAT_CONSTANT term_line numexpression_line _expression','__atribstat',4,'p___atribstat','draguitax.py',111),
  ('__atribstat -> STRING_CONSTANT term_line numexpression_line _expression','__atribstat',4,'p___atribstat','draguitax.py',112),
  ('__atribstat -> NULL term_line numexpression_line _expression','__atribstat',4,'p___atribstat','draguitax.py',113),
  ('__atribstat -> LPAREN numexpression RPAREN term_line numexpression_line _expression','__atribstat',6,'p___atribstat','draguitax.py',114),
  ('___atribstat -> lvalue_line term_line numexpression_line _expression','___atribstat',4,'p____atribstat','draguitax.py',119),
  ('___atribstat -> LPAREN paramlistcall RPAREN','___atribstat',3,'p____atribstat','draguitax.py',120),
  ('funccall -> IDENT LPAREN paramlistcall RPAREN','funccall',4,'p_funccall','draguitax.py',126),
  ('paramlistcall -> IDENT _paramlistcall','paramlistcall',2,'p_paramlistcall','draguitax.py',133),
  ('paramlistcall -> empty','paramlistcall',1,'p_paramlistcall','draguitax.py',134),
  ('_paramlistcall -> COMMA paramlistcall','_paramlistcall',2,'p__paramlistcall','draguitax.py',140),
  ('_paramlistcall -> empty','_paramlistcall',1,'p__paramlistcall','draguitax.py',141),
  ('printstat -> PRINT expression','printstat',2,'p_printstat','draguitax.py',147),
  ('readstat -> READ lvalue','readstat',2,'p_readstat','draguitax.py',153),
  ('returnstat -> RETURN','returnstat',1,'p_returnstat','draguitax.py',159),
  ('ifstat -> IF LPAREN expression RPAREN LBRACES statement RBRACES _ifstat','ifstat',8,'p_ifstat','draguitax.py',165),
  ('_ifstat -> ELSE LBRACES statement RBRACES','_ifstat',4,'p__ifstat','draguitax.py',171),
  ('_ifstat -> empty','_ifstat',1,'p__ifstat','draguitax.py',172),
  ('forstat -> FOR LPAREN atribstat SEMICOLON expression SEMICOLON atribstat RPAREN LBRACES statement RBRACES','forstat',11,'p_forstat','draguitax.py',178),
  ('statelist -> statement _statelist','statelist',2,'p_statelist','draguitax.py',184),
  ('_statelist -> statelist','_statelist',1,'p__statelist','draguitax.py',190),
  ('_statelist -> empty','_statelist',1,'p__statelist','draguitax.py',191),
  ('allocexpression -> NEW _allocexpression','allocexpression',2,'p_allocexpression','draguitax.py',197),
  ('_allocexpression -> INT allocexpression_line','_allocexpression',2,'p__allocexpression','draguitax.py',203),
  ('_allocexpression -> FLOAT allocexpression_line','_allocexpression',2,'p__allocexpression','draguitax.py',204),
  ('_allocexpression -> STRING allocexpression_line','_allocexpression',2,'p__allocexpression','draguitax.py',205),
  ('allocexpression_line -> LBRACKET numexpression RBRACKET _allocexpression_line','allocexpression_line',4,'p_allocexpression_line','draguitax.py',211),
  ('_allocexpression_line -> allocexpression_line','_allocexpression_line',1,'p__allocexpression_line','draguitax.py',217),
  ('_allocexpression_line -> empty','_allocexpression_line',1,'p__allocexpression_line','draguitax.py',218),
  ('expression -> numexpression _expression','expression',2,'p_expression','draguitax.py',224),
  ('_expression -> LESS_THAN numexpression','_expression',2,'p__expression','draguitax.py',230),
  ('_expression -> GREATER_THAN numexpression','_expression',2,'p__expression','draguitax.py',231),
  ('_expression -> LESS_EQUAL_THAN numexpression','_expression',2,'p__expression','draguitax.py',232),
  ('_expression -> GREATER_EQUAL_THAN numexpression','_expression',2,'p__expression','draguitax.py',233),
  ('_expression -> EQUAL_TO numexpression','_expression',2,'p__expression','draguitax.py',234),
  ('_expression -> NOT_EQUAL_TO numexpression','_expression',2,'p__expression','draguitax.py',235),
  ('numexpression -> term numexpression_line','numexpression',2,'p_numexpression','draguitax.py',241),
  ('numexpression_line -> PLUS term numexpression_line','numexpression_line',3,'p_numexpression_line','draguitax.py',247),
  ('numexpression_line -> MINUS term numexpression_line','numexpression_line',3,'p_numexpression_line','draguitax.py',248),
  ('numexpression_line -> empty','numexpression_line',1,'p_numexpression_line','draguitax.py',249),
  ('term -> unaryexpre term_line','term',2,'p_term','draguitax.py',255),
  ('term_line -> TIMES unaryexpre term_line','term_line',3,'p_term_line','draguitax.py',261),
  ('term_line -> DIVIDE unaryexpre term_line','term_line',3,'p_term_line','draguitax.py',262),
  ('term_line -> MODULO unaryexpre term_line','term_line',3,'p_term_line','draguitax.py',263),
  ('term_line -> empty','term_line',1,'p_term_line','draguitax.py',264),
  ('unaryexpre -> factor','unaryexpre',1,'p_unaryexpr','draguitax.py',270),
  ('unaryexpre -> PLUS factor','unaryexpre',2,'p_unaryexpr','draguitax.py',271),
  ('unaryexpre -> MINUS factor','unaryexpre',2,'p_unaryexpr','draguitax.py',272),
  ('factor -> INT_CONSTANT','factor',1,'p_factor','draguitax.py',278),
  ('factor -> FLOAT_CONSTANT','factor',1,'p_factor','draguitax.py',279),
  ('factor -> STRING_CONSTANT','factor',1,'p_factor','draguitax.py',280),
  ('factor -> NULL','factor',1,'p_factor','draguitax.py',281),
  ('factor -> lvalue','factor',1,'p_factor','draguitax.py',282),
  ('factor -> LPAREN numexpression RPAREN','factor',3,'p_factor','draguitax.py',283),
  ('lvalue -> IDENT lvalue_line','lvalue',2,'p_lvalue','draguitax.py',289),
  ('lvalue_line -> LBRACKET numexpression RBRACKET lvalue_line','lvalue_line',4,'p_lvalue_line','draguitax.py',295),
  ('lvalue_line -> empty','lvalue_line',1,'p_lvalue_line','draguitax.py',296),
  ('empty -> <empty>','empty',0,'p_empty','draguitax.py',302),
]
